当我们同时运行多个任务的时候，我们需要避免多个任务同时访问一个资源，可以通过锁（本质是“互斥”）来同步两个任务的行为，也就是说，如果两个任务同时需要某个资源，在交替运行，可以通过互斥的方式
使得任何时刻只有一个任务可以访问这个资源

好，这个问题解决，下一步是如何使任务之间可以协作，以使得多个任务可以一起工作以解决某个问题，所以现在的问题不再是彼此干涉，而是彼此的协调，因为这类问题中，某些部分必须其他部分解决之后才能继续
就像盖房子，先挖地基，接下来可以并行的铺设钢结构，和构建水泥，但盖房子又必须串行

任务之间的协作，关键在于任务之间相互握手，相互通知，我们也可以使用“互斥”，确保只有一个任务响应某个信号，执行。然后在互斥之上，我们为任务添加另一个途径，就是可以将自身挂起，直到某些外部条件发生变化，表示是时候让这个任务继续向前进行了。

任务之间的握手，可以通过Object的wait()和notify()来实现，concurrent包也提供了 有 await（）和signal（）方法的Condition对象来完成


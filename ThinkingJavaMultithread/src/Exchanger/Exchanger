Exchanger是在两个任务之间交换对象的栅栏，当这些任务进入栅栏时，它们各自拥有一个对象，当它们离开时，它们都拥有之间由另一个任务持有的对象。典型场景就是：一个任务在创建对象，这些对象生产代价很高昂，
而另一个任务消费这些对象，通过这种方式，可以有更多的对象在创建的同时立即被消费

主要使用：
    只能限制于两个任务，使用同一份Exchanger对象
    当其中一个任务调用   exchanger.exchanger()方法时，它会自身阻塞，然后等待到另一个任务调用自己的 exchange（）方法，这时，两个任务的exchange（）方法完成，中间的对象会被交换。
    注意如果集合的话，必须保证Exchange用于交换的对象是线程安全的

